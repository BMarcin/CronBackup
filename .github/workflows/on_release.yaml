name: Build docker image on publish

on:
  release:
    types:
      - published

jobs:
  DockerBuildPush:
    runs-on: ubuntu-latest

    #needs: TestCode
    #if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set Branch Environment
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          pull: true
          context: .
          push: true
          tags: ghcr.io/bmarcin/cronbackup:${{ env.BRANCH }}, ghcr.io/bmarcin/cronbackup:latest
          cache-from: type=registry,ref=ghcr.io/bmarcin/cronbackup:latest
          cache-to: type=inline
          build-args: |
            BRANCH=${{ env.BRANCH }}

  BuildWHL:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Build wheel
        run: poetry build -f wheel

      - name: Edit release and add WHL
        uses: irongut/EditRelease@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          id: ${{ github.event.release.id }}
          files: dist/cronbackup-0.1.0-py3-none-any.whl
